ReviewerID: 546  
Comments to author(s)

The paper proposes a method for answering universally quantified
queries in the language of the situation calculus, where
the universal quantifier applies to the domain of situations.
It is not straightforward how to develop
an automated procedure for answering such queries
because a second-order induction
axiom seem to be necessary in the proofs.`

The authors propose a method which avoids the use of
the second-order axiom, and relies on a fixpoint computation
combined with theorem proving. An important
feature of the proposed method is that theorem proving
involves only a limited kind of axioms.

The paper is well-motivated, and the technique is used in
another paper by the same authors (also submitted to IJCAI).

The authors discuss the correctness of their algorithm,
but I found the proof a little too sketchy.
There is something wrong in the second
paragraph, which might be due to an incorrect reference
compilation.

The discussion of the conditions for termination
is somewhat unsatisfactory. For example, what
does the requirement of having finite domains mean in
the context of the situation calculus, where the domain
of situations is infinite? I am sure the authors had
something concrete in mind, but did not write it down.

I believe it is important to state the conditions for termination
more precisely, even if they are quite restrictive at this time.

In the conclusion, the authors state that `the algorithm is shown
to be correct and complete given some basic restrictions
on the theory of action which can be widely met in practice'.
However, it follows from the paragraph just before
the section on efficiency that those conditions (which
they say are easy to meet) are still under investigation.

In the section `Efficiency', the authors say that
their algorithm replaces one reasoning task with a
potentially large number of reasoning tasks based
on the unique name axioms. It would be good to
have some idea about what `potentially large'
means in this context.

Minor comments:

An simple example after definition 2 would be really useful.

A convention on omitting universal quantifiers is introduced,
but is only followed in an introductory section (with a small
exception). I would keep all quantifiers in since you also
have formulas with free variables. A consistent use
of parenthesis after quantifiers would be good too.



Summary of review

Summary: The authors propose a potentially important
reasoning mechanism for the situation calculus.
Unfortunately, the issue of completeness did not receive
a proper attention.


You may optionally submit feedback that will be visible to the reviewers and PC members. The length of your feedback is limited to 250 words (including spaces and special characters).
Please enter your arguments here: 	

Back 	

bild
	Criterion01	Criterion02	Criterion03	Criterion04	Criterion05	Criterion06	Criterion07	Criterion08
 ReviewerID: 485  
Comments to author(s)
P. 1 left: "much work on the sit calc has involved reducing the number
of axioms required" -- say you will discuss this in Sec 2.2.
"determine whether any situation exists that satisfies a particular
goal" is not a universal query but an existential one; rephrase.

P. 2 left: "axioms describing THE VALUE of fluents in the initial
situation". The definition of uniform formula is quite imprecise; at
least refer to a formal definition and perhaps point out some of the
restrictions (no mention of Poss, \leq, etc.). Similarly, give a
precise definition of action description formulas.

P. 2 right: Typo in line 17 "\alpha(a,s')". "[Lin & Reiter 94] show
that "certain types of universally quantified formulae"; can you be
more precise? Typo "principle tool". Bottom: discuss the
restrictions on the class of regressible formulas for which regression
can produce a formula uniform in S0. Say that you note repeated
regression by R^*.

P. 3 left: "When applied to an action desctiption, regression replaces
it by the RHS of D_ap"; this only works for Poss. Say you assume a
finite set of action types, not instances. Re Need for Cooperation:
"To establish that it is ABSOLUTELY NECESSARY to cooperate".

P. 3 right: "above techniques" --> "techniques mentioned earlier".
Typos "complImentary", "Other workS focuS". In the [Lin & Reiter 94]
approach, you must replace Poss(a,s) by the RHS of the appropriate
action precondition axiom in order to get rid of these axioms; correct.

P. 4 left: Point out that Definition 2 only applies to regressible
\phi and \alpha. Proposition 2: what are the restrictions on \phi and
\alpha? (Regressible formulas). Again, to get rid of the action
precondition axioms, you must replace Poss by the RHS of the
appropriate action precondition axiom.

P. 5: It would be good to give a non-trivial example of the algorithm
computing the persistence condition of a formula.

P. 6 left: I think section 3.3 is pretty predictable and could be
shortened; perhaps explain in more detail how you use the persistence
condition to regress knowledge under partial observability.

P. 6 right: Near top, "arbitrary \alpha-ordering over situations";
perhaps rephrase with less jargon, e.g. "considering only sequences of
actions that satisfy certain conditions".


Summary of review
The paper shows how a large class of formulas that quantify over all
situations can be proven in the first-order version of the situation
calculus (without its second order order induction axiom about the
domain of situations). This allows this type of reasoning to be
automated. The class of formulas handled goes well beyond those
treated in previous work.

The paper is well written and the results quite significant. The
formulas that are handled by the method could be defined more
precisely. It would have been good to provide some experimental
validation of the approach.



You may optionally submit feedback that will be visible to the reviewers and PC members. The length of your feedback is limited to 250 words (including spaces and special characters).
Please enter your arguments here: 	

Back 	

bild
	Criterion01	Criterion02	Criterion03	Criterion04	Criterion05	Criterion06	Criterion07	Criterion08
 ReviewerID: 878  
Comments to author(s)
I believe that the idea of introducing a persistence operator and an ordering relation concerning actions is very interesting, and persistence is a crucial property. The paper is well presented and clear, there are few typos, for example at page 3, after definition 2, “encoding of the requirement”, eliminate “of”. Page 3 end of paragraph 2.4 replace “exiting” with “existing”, and in the last page, in the conclusions, second column, ‘that fact” should be replaced with “the fact”.
However there are some technical details which should be fixed to make the proposal really valuable.
In paragraph 2.2 when recalling the regression operator the author(s) states that \R_D transforms a formula uniform in “do(a,s)” into a formula uniform in “s”, without taking into account the fact that regression operates only on “regressable” formulae.
Uniform formulae as in [1] are those that refer to a single situation term, meaning that the situation term can also be a variable. This definition is close to the one on “simple state formulae” as defined in [2].
Regressable formulae are more constrained than uniform.
In fact, the regression operator needs the formula \phi to not mention variables of sort situation, indeed it is said in [1] that “The essence of a regressable formula is that each of its situation terms is rooted at S0, and therefore, one can tell, by inspection of such a term, exactly how many actions it involves. It is not necessary to be able to tell what those actions are just how many there are.”
For the proof of regression in [1] this fact is crucial. Maybe the notion could be extended, but should be proved. Indeed, it seems to me that if one could prove a general regression property holding for uniform formulae (and not only for regressable formulae), persistence would be an obvious consequence.
Therefore I suppose that the authors do not rely on some confusion between uniform and regressable formulae, and in their mind regression is specifically constrained.
The author(s) claim that verification of state constraints, as achieved in [2], could be generalized.
In particular, in the proof of Proposition 2 it is said that the proof itself can be obtained as a straightforward adaptation of the proof of Lemma 5 of [2], which I do not think is true. In fact, the trick used in the proof of Lemma 5 is that M’ satisfies a fluent uniform in S0 whenever M satisfies such a fluent uniform in “s”; and since M’ satisfies Dss then it could be the case that M’ satisfies
~F(s) when M satisfies F(s). Since the author statement mentions Vs. phi(s), the argument might not be usable. Furthermore in [2] ramification constraints are required to be accessible from S0, see theorem 3 of [2].
This would affect also the proof of the theorem. I suggest revising all the proofs where regressable formulae are involved and possibly explain in which form regression is required.

[1] Some contributions too the metatheory of Situation Calculus.
[2] State constraints revised.


Summary of review
The paper faces an interesting problem, it is well written, well organized and readable. I would like to accept the paper. However in my opinion there are some technical problems related to the confusion between uniform formulae and regressable formulae. This point might be fixed in so leading to a clearer definition of the persistence operator.
