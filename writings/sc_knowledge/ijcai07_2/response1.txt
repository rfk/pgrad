
Regarding completeness, there is sufficient space to include clarifications
along the following lines:

P_D operates over the set of equivalence classes of formulae uniform in s.
By "finite domains" we mean sitcalc theories with a finite number of actions
and objects.  This restriction ensures a finite set of equivalence classes,
which in turn guarantees termination of our algorithm.

If successor state axioms refer only to the direct arguments of the fluents,
for example F(v1,v2,do(a,s)) <-> phi(v1,v2), then repeated applications
of P_D^1 will operate on a limited subset of the formulae uniform in s. This
subset will refer to a finite number of actions and objects, giving
the same completeness guarantee.

While we are investigating more lenient syntactic restrictions that will still
guarantee completeness, these basic cases already cover a variety of useful
sitcalc theories.


In pathological cases the "potentially large number of reasoning tasks"
is be bounded only by the number of objects and fluents in the domain.  In
practice we have often found persistence to be decided within two or
three iterations.


We have attempted to explicitly include quantifiers only when we wish
to draw attention to them, to reduce visual clutter.  As you suggest,
we will check all formulae for consistency and clarity, particularly
those that include free variables.

