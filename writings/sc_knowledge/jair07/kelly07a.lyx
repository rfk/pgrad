#LyX 1.5.1 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass article
\begin_preamble

\usepackage{theapa}
\usepackage{jair}
\jairheading{0}{0000}{0-0}{0/0}{0/0}
\ShortHeadings{Common Knowledge, Hidden Actions, and the Frame Problem}{R. F. Kelly \& A. R. Pearce}
\firstpageno{0}


\newcommand{\isdef}{\ensuremath{\stackrel{\mbox{\tiny def}}{=}}}
\newcommand{\MOP}[1]{\ensuremath{\mathbf{\mathcal{#1}}}}
\end_preamble
\options jair,twoside,11pt,theapa,letterpaper
\language english
\inputencoding latin1
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Common Knowledge, Hidden Actions, and the Frame Problem
\end_layout

\begin_layout Author
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
name Ryan F.
 Kelly 
\backslash
email rfk@csse.unimelb.edu.au
\end_layout

\end_inset


\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
name Adrian R.
 Pearce 
\backslash
email adrian@csse.unimelb.edu.au
\end_layout

\end_inset


\newline

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
addr Department of Computer Science and Software Engineering
\backslash

\backslash

\end_layout

\begin_layout Standard

The University of Melbourne
\backslash

\backslash

\end_layout

\begin_layout Standard

Victoria, 3010, Australia
\end_layout

\end_inset


\end_layout

\begin_layout Abstract
We present a powerful new account of multi-agent knowledge in the situation
 calculus, along with an effective reasoning procedure for knowledge queries.
 A key contribution of our approach is the ability to handle partial observabili
ty, including actions that are completely hidden, by explicitly reifying
 the observations made by each agent as the world evolves.
 We also formally treat complex epistemic modalities, including common knowledge
, which are not available in the standard account.
 By using the persistence condition meta-operator to augment traditional
 regression techniques, we allow agents to effectively reason about knowledge
 using only their internal history of observations, rather than requiring
 a full history of the world.
 The result is a more robust and flexible account of knowledge in the situation
 calculus suitable for use in asynchonrous, partially-observable multi-agent
 domains.
 
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
In their landmark paper 
\emph on
Knowledge, Action, and the Frame Problem,
\emph default
 Scherl and Levesque (2003) extend Reiter's solution to the frame problem
 in the situation calculus 
\begin_inset LatexCommand cite
key "reiter91frameprob,pirri99contributions_sitcalc"

\end_inset

 to handle knowledge-producing actions and explicit reasoning about the
 knowledge of an agent.
 Extensions to multiple agents 
\begin_inset LatexCommand cite
key "Lesperance01epi_feas_casl"

\end_inset

 and concurrent actions 
\begin_inset LatexCommand cite
key "scherl03conc_knowledge"

\end_inset

 have produced an expressive logic of knowledge, action and change that
 permits an effective reasoning procedure using standard techniques of the
 situation calculus.
\end_layout

\begin_layout Standard
While powerful, the existing account suffers two major limitations that
 make it unsuitable for modelling complex multi-agent domains.
\end_layout

\begin_layout Itemize
actions are assumed to be public (or, more generally, agents are assumed
 to be aware of how many actions have ocurred)
\end_layout

\begin_layout Itemize
common knowledge is not given a formal treatment
\end_layout

\begin_layout Standard
In this paper we overcome these limitations to produce a more robust and
 flexible account of knowledge suitable for use in asynchonrous, partially-obser
vable multi-agent domains.
 Specifically, we provide:
\end_layout

\begin_layout Itemize
a formal account of 
\emph on
Common Knowledge
\emph default
 and other complex epistemic modalities, including an explicit regression
 rule for reasoning about common knowledge
\end_layout

\begin_layout Itemize
support for 
\emph on
Hidden Actions
\emph default
 and actions that are partially observable, including a reasoning technique
 to deal with infinite sequences of hidden actions
\end_layout

\begin_layout Itemize
an automatic solution to the 
\emph on
Frame Problem
\emph default
 for each epistemic modality, derived from the solution for primitive actions,
 and maintaining regression as the primary reasoning tool
\end_layout

\begin_layout Standard
After some introductory material on the situation calculus in Section 
\begin_inset LatexCommand ref
reference "sec:The-Multi-Agent-Situation"

\end_inset

, we address the first major limitation in Section 
\begin_inset LatexCommand ref
reference "sec:Obs-Knowledge"

\end_inset

 by decoupling knowledge from the specific actions that have taken place.
 Instead we develop an explicit reification of the observations made by
 each agent as the world evolves, and formulate each agent's knowldge in
 terms of what it has observed.
 By utilizing the persistence condition meta-operator 
\begin_inset LatexCommand cite
key "kelly07sc_persistence"

\end_inset

 to augment the regression techniques developed by Scherl and Levesque (2003),
 we maintain their elegant solution to the frame problem despite dealing
 with potentially infinite sequences of hidden actions.
 This section is an expanded version of our conference paper on the same
 topic 
\begin_inset LatexCommand cite
key "kelly07sc_know_obs"

\end_inset

 and stands as an significant new account of knowledge in its own right.
\end_layout

\begin_layout Standard
Section 
\begin_inset LatexCommand ref
reference "sec:Complex-Epistemic-Modalities"

\end_inset

 deals with the second limitation by introducing complex epistemic modalities.
 While the primary motivation is a formal account of common knowledge, work
 in dynamic epistemic logic 
\begin_inset LatexCommand cite
key "baltag99epi_act_structures,vanBenthem06lcc"

\end_inset

 has shown that a more expressive epistemic language is required to allow
 regression of the common knowledge operator.
 After summarizing recent advances in this related field, we follow the
 work of van Benthem et.
 al.
 (2006) and use a variant of Propositional Dynamic Logic as a general epistemic
 path language.
 The results of Section 
\begin_inset LatexCommand ref
reference "sec:Obs-Knowledge"

\end_inset

 are generalized to arbitrary PDL expressions.
 
\end_layout

\begin_layout Standard
Since our account of knowledge is very general, reasoning with it can be
 very expensive.
 In Section 
\begin_inset LatexCommand ref
reference "sec:Simplifying-Reasoning"

\end_inset

 we discuss a number of ways to simplify the reasoning procedure by placing
 restrictions on the domain.
 Sections 
\begin_inset LatexCommand ref
reference "sec:Related-Work"

\end_inset

 and 
\begin_inset LatexCommand ref
reference "sec:Future-Work"

\end_inset

 discuss related and future work respectively, and Section 
\begin_inset LatexCommand ref
reference "sec:Conclusions"

\end_inset

 concludes with a summary of our achievements in this paper.
\end_layout

\begin_layout Section
The Multi-Agent Situation Calculus
\begin_inset LatexCommand label
name "sec:The-Multi-Agent-Situation"

\end_inset


\end_layout

\begin_layout Standard
general description here, lifted from AAMAS paper
\end_layout

\begin_layout Subsection
Knowledge and Sensing
\end_layout

\begin_layout Standard
discuss the standard approach, why it's good, what its limtations are.
\end_layout

\begin_layout Subsection
Regression
\end_layout

\begin_layout Standard
major attraction of the sitcalc, but limited.
\end_layout

\begin_layout Subsection
Property Persistence
\end_layout

\begin_layout Standard
introduce property persistence as a way to extend regression.
\end_layout

\begin_layout Section
Observation-Based Semantics for Knowledge
\begin_inset LatexCommand label
name "sec:Obs-Knowledge"

\end_inset


\end_layout

\begin_layout Standard
motivation: decouple knowledge from actions, so that agents don't have to
 have a situation term in order to do reasoning.
 This is basically the full version of the AAMAS paper.
\end_layout

\begin_layout Subsection
Observations and Outcomes
\end_layout

\begin_layout Standard
definitions of 
\begin_inset Formula $Obs(agt,c,s)$
\end_inset

 and 
\begin_inset Formula $Out(c,s)$
\end_inset


\end_layout

\begin_layout Subsection
Knowledge and Observation
\end_layout

\begin_layout Standard
some discussion on the intuitive meaning of 
\begin_inset Formula $K(agt,s',s)$
\end_inset

, definition of successor state axiom
\end_layout

\begin_layout Subsection
Axiomatizing Observations
\end_layout

\begin_layout Standard
how to axiomatize observations for several common cases, e.g.
 total awareness, total ignorance, more general partialy observability.
\end_layout

\begin_layout Subsection
Observing the Effects of Actions
\end_layout

\begin_layout Standard
how to further decouple actions from observations, where observations represent
 the effects of the action rather than the action itself.
 
\end_layout

\begin_layout Subsection
An Illustrative Example
\end_layout

\begin_layout Standard
example from the packing domain, so everyone gets the idea
\end_layout

\begin_layout Subsection
Regression
\end_layout

\begin_layout Standard
Definition of regression, using the persistence condition operator
\end_layout

\begin_layout Subsection
Reasoning from Observations
\end_layout

\begin_layout Standard
regression over observations, talk about why it's so good.
 
\end_layout

\begin_layout Section
Complex Epistemic Modalities
\begin_inset LatexCommand label
name "sec:Complex-Epistemic-Modalities"

\end_inset


\end_layout

\begin_layout Standard
The goal is to handle common knowledge.
\end_layout

\begin_layout Subsection
Common Knowledge by Direct Calculation
\end_layout

\begin_layout Standard
we can try to calculate common knowledge as a fixpoint of EKnows, but this
 is not generally a good idea in practise:
\end_layout

\begin_layout Itemize

\series bold
very
\series default
 computationally expensive
\end_layout

\begin_layout Itemize
no guarantee it will terminate
\end_layout

\begin_layout Subsection
Common Knowledge by Direct Regression
\end_layout

\begin_layout Standard
it would be ideal if we could express CKnows(
\begin_inset Formula $\phi$
\end_inset

,do(c,s)) in terms CKnows(
\begin_inset Formula $\psi$
\end_inset

,s), but this has been shown to be impossible in general.
 Instead we must appeal to a richer epistemic language
\end_layout

\begin_layout Subsection
E-PDL and LCC
\end_layout

\begin_layout Standard
describe the work of 
\begin_inset LatexCommand cite
key "vanBenthem06lcc"

\end_inset

 with their epistemic propositional dynamic logic and update frames.
 It's almost what we're after, but we need to introduce some first-order
 features.
\end_layout

\begin_layout Subsection
The Update Frame
\end_layout

\begin_layout Standard
show how the domain description translates into an update frame, including
 a null element.
 talk about using unification to finitize the frame.
 We have a finite set of (action,outcome) events 
\begin_inset Formula $\mathcal{A}$
\end_inset

 as well as a 
\begin_inset Quotes eld
\end_inset

null event
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\epsilon$
\end_inset

.
\end_layout

\begin_layout Subsection
Path Translation
\end_layout

\begin_layout Standard
import the 
\begin_inset Formula $\mathcal{T}$
\end_inset

 and 
\begin_inset Formula $\mathcal{K}$
\end_inset

 operators of 
\begin_inset LatexCommand cite
key "vanBenthem06lcc"

\end_inset

 into our formalism, discuss how they work.
\end_layout

\begin_layout Subsection
A Complex Epistemic Fluent
\end_layout

\begin_layout Standard
We need to define 
\begin_inset Formula $K(\pi,s'',s)$
\end_inset

 for a general epistemic path 
\begin_inset Formula $\pi$
\end_inset

.
 We know the behavior we want, from the semantics of PDL:
\begin_inset Formula \[
K(A,s',s)\, as\, above\]

\end_inset


\begin_inset Formula \[
K(?\phi,s',s)\equiv\phi[s]\wedge s=s'\]

\end_inset


\begin_inset Formula \[
K(\pi_{1};\pi_{2},s',s)\equiv\exists s''\, K(\pi_{1},s'',s)\wedge K(\pi_{2}s',s'')\]

\end_inset


\begin_inset Formula \[
K(\pi_{1}\cup\pi_{2},s',s)\equiv K(\pi_{1},s',s)\vee K(\pi_{2},s',s)\]

\end_inset


\begin_inset Formula \[
K(\pi^{*},s',s)\equiv TransClosure(K(\pi,s',s))\]

\end_inset


\end_layout

\begin_layout Standard
By case analysis, show that this successor state axiom preserves these definitio
ns:
\begin_inset Formula \begin{multline*}
K(\pi,s'',do(a,s))\equiv K(\mathcal{T}[\pi,a,\epsilon],s'',s)\,\vee\\
\bigcup_{a'\in\mathcal{A}}\exists s'\, K(\mathcal{T}[\pi,a,a'],s',s)\wedge do(a',s')\leq_{\lambda a.Poss(a)\wedge\mathbf{Maybe}(\mathcal{T}[\pi,a,\epsilon])}s''\end{multline*}

\end_inset


\end_layout

\begin_layout Subsection
Case Analysis
\end_layout

\begin_layout Subsubsection
Primitive Modality
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\mathcal{T}[A,a,a']=?pre(a);A;?(poss(a')\wedge pre(a'))\]

\end_inset


\end_layout

\begin_layout Standard
So
\begin_inset Formula \begin{multline*}
K(A,s'',do(a,s))\equiv K(?unobs(A,a);A;\top,s'',s)\,\vee\\
\bigcup_{a'\in\mathcal{A}}\exists s'\, K(?obs(A,a);A;?(poss(a')\wedge obs(A,a')),s',s)\wedge do(a',s')\leq_{\lambda a.Poss(a)\wedge\mathbf{Maybe}(?unobs(A,a);A;\top,\top)}s''\end{multline*}

\end_inset


\end_layout

\begin_layout Standard
Now, we make a simplifying assumption: for all legal situations s, 
\begin_inset Formula $\mathbf{Maybe}(A,\top,s)$
\end_inset

 is true.
 In other words, every legal situation is A-related to something - since
 we're dealing with knowledge, that something is itself.
 This allows any expression of the form 
\begin_inset Formula $\mathbf{Maybe}(\pi;A,\top,s)$
\end_inset

 to be simplified to 
\begin_inset Formula $\mathbf{Maybe(\pi,\top,s)}$
\end_inset

.
 Using this, the above is equivalent to our previous SSA for knowledge.
\end_layout

\begin_layout Subsubsection
Test Modality
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\mathcal{T}[?\phi,a,a']=?(a=a'\wedge poss(a)\wedge\mathcal{R}[\phi,a])\]

\end_inset


\end_layout

\begin_layout Standard
So
\begin_inset Formula \begin{multline*}
K(?\phi,s'',do(a,s))\equiv K(\bot,s'',s)\,\vee\\
\bigcup_{a'\in\mathcal{A}}\exists s'\, K(?(a=a'\wedge poss(a)\wedge\mathcal{R}[\phi,a]),s',s)\wedge do(a',s')\leq_{\lambda a.Poss(a)\wedge\mathbf{Maybe}(?\bot,\top)}s''\end{multline*}

\end_inset


\end_layout

\begin_layout Standard
Which simplifies to:
\begin_inset Formula \begin{multline*}
K(?\phi,s'',do(a,s))\equiv\exists s'\, s''=do(a,s')\wedge K(?(poss(a)\wedge\mathcal{R}[\phi,a]),s',s)\end{multline*}

\end_inset


\end_layout

\begin_layout Subsubsection
Union Modality
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\mathcal{T}[\pi_{1}\cup\pi_{2},a,a']=\mathcal{T}[\pi_{1},a,a']\cup\mathcal{T}[\pi_{2},a,a']\]

\end_inset


\end_layout

\begin_layout Standard
So:
\begin_inset Formula \begin{multline*}
K(\pi_{1}\cup\pi_{2},s'',do(a,s))\equiv K(\mathcal{T}[\pi_{1},a,\epsilon]\cup\mathcal{T}[\pi_{2},a,\epsilon],s'',s)\,\vee\\
\bigcup_{a'\in\mathcal{A}}\exists s'\, K(\mathcal{T}[\pi_{1},a,a']\cup\mathcal{T}[\pi_{2},a,a'],s',s)\wedge do(a',s')\leq_{\lambda a.Poss(a)\wedge\mathbf{Maybe}(\mathcal{T}[\pi_{1},a,\epsilon]\cup\mathcal{T}[\pi_{2},a,\epsilon])}s''\end{multline*}

\end_inset


\end_layout

\begin_layout Subsubsection
Sequence Modality
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\mathcal{T}[\pi_{1};\pi_{2},a,a']=\bigcup_{a''\in\mathcal{A}^{\epsilon}}(\mathcal{T}[\pi_{1},a,a''];\mathcal{T}[\pi_{2},a'',a'])\]

\end_inset


\end_layout

\begin_layout Standard
So:
\begin_inset Formula \begin{multline*}
K(\pi_{1};\pi_{2},s'',do(a,s))\equiv K(\bigcup_{a''\in\mathcal{A}^{\epsilon}}(\mathcal{T}[\pi_{1},a,a''];\mathcal{T}[\pi_{2},a'',\epsilon]),s'',s)\,\vee\\
\bigcup_{a'\in\mathcal{A}}\exists s'\, K(\mathcal{T}[\pi,a,a'],s',s)\wedge do(a',s')\leq_{\lambda a.Poss(a)\wedge\mathbf{Maybe}(\mathcal{T}[\pi,a,\epsilon])}s''\end{multline*}

\end_inset


\end_layout

\begin_layout Subsection
Regressing Complex Modalities
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Subsection
Reasoning about Common Knowledge
\end_layout

\begin_layout Standard
With our framework in place, an agent can now ask 
\begin_inset Quotes eld
\end_inset

is 
\begin_inset Formula $\phi$
\end_inset

 common knowledge given my current history?
\begin_inset Quotes erd
\end_inset

 using the query:
\begin_inset Formula \[
\mathcal{D}\,\models\,\mathbf{Knows}(agt,\mathbf{Knows}((agt1|agt2|agt3|\dots)^{*},\phi),h)\]

\end_inset


\end_layout

\begin_layout Standard
Asnwering this query involves the regression techniques we've developed
 here, including a persistence calculation on 
\begin_inset Formula $\mathbf{Knows}(\pi,\phi)$
\end_inset

 formulae.
 This is valid, as they can be regressed, but will be some pretty hairy
 reasoning! In particular, calculating 
\begin_inset Formula $\mathcal{P}$
\end_inset

 will involve proofs in a first-order variant of PDL.
 If we assume the domain is decidable (propositional?) this should be OK.
\end_layout

\begin_layout Section
Simplifying the Reasoning Procedure
\begin_inset LatexCommand label
name "sec:Simplifying-Reasoning"

\end_inset


\end_layout

\begin_layout Subsection
Synchronicity
\end_layout

\begin_layout Standard
By equipping agents with a global clock tick, the persistence condition
 is no longer required.
 Since this is the biggest source for computational complexity, that's a
 big win! 
\end_layout

\begin_layout Subsection
Observability
\end_layout

\begin_layout Standard
Ensure that the update frame is weakly connected, so that most 
\begin_inset Formula $\mathcal{T}[\pi,a,a']$
\end_inset

 are vacuously false.
\newline

\end_layout

\begin_layout Standard
anything else?
\end_layout

\begin_layout Section
Related Work
\begin_inset LatexCommand label
name "sec:Related-Work"

\end_inset


\end_layout

\begin_layout Section
Future Work
\begin_inset LatexCommand label
name "sec:Future-Work"

\end_inset


\end_layout

\begin_layout Standard
Lifting the restrictions on the update frame.
 Can this be done using a stronger path language?
\end_layout

\begin_layout Section
Conclusions
\begin_inset LatexCommand label
name "sec:Conclusions"

\end_inset


\end_layout

\begin_layout Standard
hooray for us, this is a great paper :-)
\end_layout

\begin_layout Standard
\begin_inset LatexCommand bibtex
options "theapa"
bibfiles "/storage/uni/pgrad/library/references"

\end_inset


\end_layout

\end_body
\end_document
