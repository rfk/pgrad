As you note, our approach is not designed for loosely-cooperating groups of
autonomous agents, but for teams that must cooperate closely to execute
a single, shared program.  They plan and perform a single, shared joint 
execution.  While this is conceptually "centralized planning", the workload
is shared among the agents using the distributed logic programming
capabilities of Mozart.

In this context, the restrictions on JE's ensure well-formedness
while allowing agents to proceed independently with independent actions.

Regarding ens(i), we will carefully check the definition but believe it is
correct.  With x < y and y < i, ens(i)={x} is not a valid solution: for y the
RHS is true (y < i & y preceeds nothing in ens(i)) but the LHS is false
(y notin ens(i)), contradicting the definition.

In R3, hist(ens(i)) gives the state-of-the-world when i is to be performed,
which determines the possible sensing outcomes of i.
