Our technique does handle partial observability of actions, indeed this is
the main strength of our work. The example joint execution explicitly permits
unobservable actions, see p5: "there is no need for actions such as mix and
chop to be public". Previous work in the sitcalc demands all actions be public.

We seek a simple, tractable extension to the planning machinery of the sitcalc
so it can be used in richer domains - specifically, to allow a team of
agents to cooperatively execute a shared program in a partially-observable
domain. This is in contrast to Davis and Morgenstern, which focuses on the
wider theory of joint planning.

The "independent actions" theorems are intentionally straightforward, providing
solid theoretical underpinnings for our technique.

Thankyou for bringing to our attention the ambiguous terminology, which appears
to have obscured our meaning in several places.
